{"version":3,"file":"view.js","mappings":";;;;;AAAAA,QAAQ,CAACC,gBAAgB,CAAC,kBAAkB,EAAE,MAAM;EAChD,MAAMC,gBAAgB,GAAGF,QAAQ,CAACG,gBAAgB,CAAC,4BAA4B,CAAC;EAEhF,MAAMC,eAAe,GAAG;IACpBC,IAAI,EAAE,IAAI;IACVC,UAAU,EAAE,mBAAmB;IAC/BC,SAAS,EAAE;EACf,CAAC;EAED,MAAMC,gBAAgB,GAAGA,CAACC,OAAO,EAAEC,QAAQ,KAAK;IAC5CD,OAAO,CAACE,OAAO,CAACC,KAAK,IAAI;MACrB,IAAIA,KAAK,CAACC,cAAc,EAAE;QACtB,MAAMC,OAAO,GAAGF,KAAK,CAACG,MAAM;QAC5B,MAAMC,aAAa,GAAGF,OAAO,CAACG,YAAY,CAAC,0BAA0B,CAAC;QACtE,IAAID,aAAa,IAAI,CAACF,OAAO,CAACI,SAAS,CAACC,QAAQ,CAAC,eAAe,CAAC,EAAE;UAC/DL,OAAO,CAACI,SAAS,CAACE,GAAG,CAAC,eAAe,EAAG,QAAOJ,aAAc,EAAC,CAAC;UAC/DN,QAAQ,CAACW,SAAS,CAACP,OAAO,CAAC;QAC/B;MACJ;IACJ,CAAC,CAAC;EACN,CAAC;EAED,MAAMJ,QAAQ,GAAG,IAAIY,oBAAoB,CAACd,gBAAgB,EAAEJ,eAAe,CAAC;EAE5EF,gBAAgB,CAACS,OAAO,CAACG,OAAO,IAAI;IAChCJ,QAAQ,CAACa,OAAO,CAACT,OAAO,CAAC;EAC7B,CAAC,CAAC;AACN,CAAC,CAAC,C","sources":["webpack://stcr-scroll-animations/./src/view.js"],"sourcesContent":["document.addEventListener('DOMContentLoaded', () => {\n    const animatedElements = document.querySelectorAll('[data-stcr-animation-type]');\n\n    const observerOptions = {\n        root: null,\n        rootMargin: '0px 0px -20px 0px',\n        threshold: 0.1\n    };\n\n    const observerCallback = (entries, observer) => {\n        entries.forEach(entry => {\n            if (entry.isIntersecting) {\n                const element = entry.target;\n                const animationType = element.getAttribute('data-stcr-animation-type');\n                if (animationType && !element.classList.contains('stcr-animated')) {\n                    element.classList.add('stcr-animated', `stcr-${animationType}`);\n                    observer.unobserve(element);\n                }\n            }\n        });\n    };\n\n    const observer = new IntersectionObserver(observerCallback, observerOptions);\n\n    animatedElements.forEach(element => {\n        observer.observe(element);\n    });\n});\n"],"names":["document","addEventListener","animatedElements","querySelectorAll","observerOptions","root","rootMargin","threshold","observerCallback","entries","observer","forEach","entry","isIntersecting","element","target","animationType","getAttribute","classList","contains","add","unobserve","IntersectionObserver","observe"],"sourceRoot":""}